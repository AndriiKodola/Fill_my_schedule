export default class Month{
    constructor(monthNum, yearNum) {
        this.monthNum = monthNum;
        this.yearNum = yearNum;
    }
  
    genMonthDaysNum = (firstDayNum, numOfDays) => {
        const daysNumArray = [];
        let currDayNum = firstDayNum;
  
        for (let i = 0; i < numOfDays; i++) {
            daysNumArray.push(currDayNum);
            currDayNum++;
            if (currDayNum === 7) {
            currDayNum = 0;
            }
        }
        return daysNumArray;
    };

    /**
     * 
     * @param {array} monthArray - month base generated by Month class
     * 
     * @return {int} - number of work days in current month
     */
    workDaysNum = () => {
        const monthArray = this.getMonthBase();
        return monthArray.reduce((acc, cur) => {
            return cur.weekend ? acc : ++acc;
        }, 0);
    }
  
    getMonthBase = () => {
        const firstDayNumInMonth = new Date(this.yearNum, this.monthNum, 0).getDay();
        const monthSize = new Date(this.yearNum, this.monthNum + 1, 0).getDate();
        const monthDaysNumArray = this.genMonthDaysNum(firstDayNumInMonth, monthSize);
  
        //TODO: refactor to return dateWeekDay to schedule

        return monthDaysNumArray.map((dayNum, index) => {
            switch (dayNum) {
            case 0:
                return { dateDayNum: ++index, weekDay: "Sunday", weekend: true };
            case 1:
                return { dateDayNum: ++index, weekDay: "Monday", weekend: false };
            case 2:
                return { dateDayNum: ++index, weekDay: "Tuesday", weekend: false };
            case 3:
                return { dateDayNum: ++index, weekDay: "Wednesday", weekend: false };
            case 4:
                return { dateDayNum: ++index, weekDay: "Thursday", weekend: false };
            case 5:
                return { dateDayNum: ++index, weekDay: "Friday", weekend: false };
            case 6:
                return { dateDayNum: ++index, weekDay: "Saturday", weekend: true };
            }
        });
    };
}